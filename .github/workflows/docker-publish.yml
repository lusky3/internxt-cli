name: Check for new internxt-cli release and build Docker image

on:
  schedule:
    - cron: '0 * * * *'

jobs:
  check-new-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check and save latest release
        id: check_save_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/internxt/cli/releases/latest | jq -r .tag_name)
          
          max_retries=5
          retry_count=0

          while [[ $retry_count -lt $max_retries ]]; do
              # Fetch the latest release
              latest_release=$(curl -s https://api.github.com/repos/internxt/cli/releases/latest | jq -r .tag_name)

              if [[ -z "$latest_release" || "$latest_release" == "null" ]]; then
                  echo "Version lookup failed. Retrying in 30 seconds... (Attempt $((retry_count + 1)) of $max_retries)"
                  sleep 30
                  retry_count=$((retry_count + 1))
              else
                  # Valid release found, break the loop
                  echo "Latest release version: $latest_release"
                  break
              fi
          done

          # Exit with error if retries are exhausted
          if [[ $retry_count -eq $max_retries ]]; then
              echo "Version lookup failed after $max_retries attempts. Please investigate."
              exit 1
          fi

          echo "latest_release=$latest_release" >> $GITHUB_ENV
          
          last_known_release=$(cat .last_release 2>/dev/null || echo "")
          echo "Our version is: $last_known_release"
          
          if [ "$latest_release" != "$last_known_release" ]; then
            echo "New release detected."
            echo "new_release=true" >> $GITHUB_ENV

            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git pull --rebase
            echo $latest_release > .last_release
            git add .last_release
            git commit -m "Update latest release to $latest_release"
            git push
          else
            echo "No new release found."
            echo "new_release=false" >> $GITHUB_ENV
            exit 0
          fi

      - name: Log in to GitHub Container Registry
        if: env.new_release == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push new Docker image
        if: env.new_release == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/internxt-cli:${{ env.latest_release }}
            ghcr.io/${{ github.repository }}/internxt-cli:latest
          platforms: linux/amd64
